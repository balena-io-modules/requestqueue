// Generated by CoffeeScript 1.9.3
(function() {
  var exports, queue, requestRetry;

  requestRetry = require('requestretry');

  queue = require('block-queue');

  module.exports = exports = function(queueOpts) {
    if (queueOpts == null) {
      queueOpts = {};
    }
    return queue(1, function(opts, done) {
      if (opts.maxAttempts == null) {
        opts.maxAttempts = queueOpts.maxAttempts;
      }
      if (opts.retryDelay == null) {
        opts.retryDelay = queueOpts.retryDelay;
      }
      if (opts.retryStrategy == null) {
        opts.retryStrategy = queueOpts.retryStrategy;
      }
      return requestRetry(opts, function(err, response, body) {
        var e;
        if (err) {
          try {
            if (typeof opts.callback === "function") {
              opts.callback(err);
            }
          } catch (_error) {
            e = _error;
            console.error("requestqueue callback error", e, e.stack);
          }
          if (typeof queueOpts.errorHandler === "function") {
            queueOpts.errorHandler(err);
          }
          return;
        }
        if (typeof opts.callback === "function") {
          opts.callback(err, response, body);
        }
        return done();
      });
    });
  };

}).call(this);
